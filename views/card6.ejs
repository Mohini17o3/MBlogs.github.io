<%-include('partials/header.ejs') %>

<div class="outer">
   <div class="descriptionCard1">  
     <h3>LIVE IN THE PRESENTTT</h3>
    <h4>July 7 , 2024</h4>
<p>
   Past few days , I have been feeling so troubled , its like the old days , the JEE days but I'm in a better condition now , anyway , I had that feeling of continuous stress and irritation due to that, I had so many things to think about , and I could not focus at all 
</p>
Sometimes we just forget the basic thing right , like we all know that we should live in the present , we all say this but are we able to implement this , are we able to calm ourselves in stressful situations , are we able to analyse our thought process and figure out what exactly is troubling us and figure out a solution and make that call for action ? I forget to do it frequently , I do remember it but I forget to implement it , recently I just forgot to live in the present moment , to focus on what I am doing right now , I was doing something and worrying about the other .
<p>
This is what I did 3 years back , I had forgotten to live in the present , I had forgotten to look and pay attention to what is in front of me , at that time I was always worried about the "what ifs" , my perspective went to paying attention to what was going wrong and anticipating about what else might go wrong , the situations I had no control on did affect me , they did take me to the downside but the next call to action by my brain would have decided what else could go wrong , and it did decide that , I can say there is always some luck factor but only if we are mentally strong to face it , wouldn't the end result depend mostly on us ?? On what we decide to do ðŸ¤” . Even though we face it and might not get the result as much as we wanted but atleast something , and atleast we would have been satisfied with the fact that we faced such a situation and didn't dwell into sadness and fear .   
</p>


<p>
    Anyways the good thing is , based on my past experience , I atleast now can make that CTA to stop my brain to overthink , and get myself back on track and start focusing on what is in front of me , focusing on things one at a time , doing tasks one at a time . By the way , I started watching Haikyu AGAIN , I never get bored of it , everytime I watch it , I feel the same excitement with every spike , with every recieve , it is just that good , apart from that it just motivates me hella lot , you can just relate with it sooo much . Sometimes when I think about what is something that I could change by going back in time (its not just a single thing though) , I would make myself learn some sport , probably volleyball , it just teaches you a lot in many ways , most importantly the fact that you are not always going to win and how you react to failure is going to decide your next result ...
 <br><br>

 I can write more about haikyu here and how much I admire and learn from it , but let's save it for next post , also I need to work on this website too ...see ..again so many things to do , but I have to focus on ONE at a time .
</p>
   </div>

</div>
<section id="comments">
    <h2>Comments</h2>
    <ul id="comments-list">
        
    </ul>

    <div id="commentDiv">
        <form id="comment-form" method="POST">
            <textarea name="content" placeholder="Add a comment"></textarea>
            <button type="submit">Submit</button>
        </form>
    </div>
</section>


<%- include("partials/footer.ejs") %>


<script>
  
  document.addEventListener('DOMContentLoaded', async () => {
    console.log("comment doc loaded ");
    const commentsList = document.getElementById('comments-list');
    const commentForm = document.getElementById('comment-form');
    const postId = '<%= post.numerical_id %>';  // Post ID
    const token = localStorage.getItem('token');
    let currentUser = null ;
 
    async function fetchLoggedUser(){
        if(!token) {
            return ;
        } 

        try {
            const res = await fetch('/auth/user' , {
                headers : {
                    "Authorization" : `Bearer ${token}`, 
                }
            }) ;
            if(res.ok) {
                const data =  await res.json()  ;
                currentUser = data.user ; 
            }

        }catch(e) {
            console.log(e) ; 
        }

    }


      
     async function loadComments () {
        try {
            const res = await fetch(`/comments/${postId}`) ;
            const {comments} = await res.json() ; 
             commentsList.innerHTML = ''; 
             
            comments.forEach((comment) => {
                const li = document.createElement('li') ;
                li.innerHTML = `
                <p> ${comment.content}</p>
                <small>by ${comment.user.name} on ${new Date (comment.createdAt).toDateString()}</small>
                 ${currentUser && currentUser.id === comment.user.id ? `
                 <button class = "delete-btn" data-id = "${comment.id}" >Delete</button>` : ""}
                
                 `; 
             commentsList.appendChild(li) ;

                         // event listeners
            document.querySelectorAll('.delete-btn').forEach(button => {
                button.addEventListener("click" , () => deleteComment(button.dataset.id)) ;
            }); 
                
            })  ;



        } catch(e) {
            console.log('Error loading comments:', e);

        }
         
    }

    // Add comment
    commentForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const content = commentForm.querySelector('textarea[name="content"]').value;

        if (!token) {
            alert('Please log in to comment.');
            return;
        }

        try {
            await fetch(`/comments${postId}/comments`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify({ content })
            });

            commentForm.reset();
            loadComments();
        } catch (error) {
            console.error('Error adding comment:', error);
        }
    });

    // Delete comment
    async function deleteComment(commentId) {
        if (!token) {
            alert('Please log in to delete comments.');
            return;
        }

        try {
            await fetch(`/comments${postId}/${commentId}`, {
                method: 'DELETE',
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            });

            loadComments();
        } catch (error) {
            console.error('Error deleting comment:', error);
        }
    }

    await fetchLoggedUser(); 
    loadComments();  

});
</script>