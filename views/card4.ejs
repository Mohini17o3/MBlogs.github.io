<%-include('partials/header.ejs') %>

<div class="outer">

   <div class="descriptionCard1">  
    <h3>  Grateful ðŸ‘€ </h3> 
    <h3>April 23 , 2024</h3>
<p>
   Mmmm hisashiburi ....long time , well its raining right now , the clocks at 12.43 am just at this moment while I have started writing , such cozy looking environment , I was solving a question on leetCode , had a headache because god such a no reason hectic day today was, 4 hours of sleep , I woke up at 6 and did some coding for the paginator starting from 6.45 or 7 am , 1 hour almost after it I guess ,then off to college , the purpose I went for ,travelled for , used my energy and time for was not served ,luck you see , and I came home at 5 , all damn tired wanting to sleep but no choice and had to skip it , pushing my limits (had a class at 6pm), lately I have been feeling of making my diet healthy , eating more and exercising too , I have no stamina if I exclude the willpower , anyways , I was wondering , about the way I have started accepting uncertainties , although it took me some time but I did start to accept life the way it is , face the stones aimed for my face ðŸ’€ , and in the process I got to meet people , some good and weird , some fine , some ummm anyways , but the experience was good , like getting to observe different varieties of people (saying as if they are things).

</p>

<p>Basically , I learned from it , the way to handle weird situations , I learnt to face being uncomfortable , I learnt to atleast pose my thoughts on something , to speak up for something , I learnt to be a little more social , I learnt to not care a little more (just a little here ok) , I learnt that no matter how much I escape , that higher one , the almighty , he'll make sure to make me face such a situation in future , uptill now I have faced a lot of different unexpected situations that tested my patience , my breaking down level , but compared to the first year's frustrations , I'm pretty chill now . I hope I'll keep challenging myself like this , I hope in future too I'll put myself out of my comfort zone and atleast experience things ...But I feel grateful to few people I have met , college life got a lil better with them to interact with . </p>


<p>P.S. I'll try to install Linux in my old lappy this week , hope it works out well , I opened it last week and damn the fan noise but I loved the cute compact size of it , this one's pretty large but yes way too light compared to the old one , the clock's at 12.59 btw ....</p>
   </div>

</div><section id="comments">
    <h2>Comments</h2>
    <ul id="comments-list">
        
    </ul>

    <div id="commentDiv">
        <form id="comment-form" method="POST">
            <textarea name="content" placeholder="Add a comment"></textarea>
            <button type="submit">Submit</button>
        </form>
    </div>
</section>


<%- include("partials/footer.ejs") %>


<script>
  
  document.addEventListener('DOMContentLoaded', async () => {
    console.log("comment doc loaded ");
    const commentsList = document.getElementById('comments-list');
    const commentForm = document.getElementById('comment-form');
    const postId = '<%= post.numerical_id %>';  // Post ID
    const token = localStorage.getItem('token');
    let currentUser = null ;
 
    async function fetchLoggedUser(){
        if(!token) {
            return ;
        } 

        try {
            const res = await fetch('/auth/user' , {
                headers : {
                    "Authorization" : `Bearer ${token}`, 
                }
            }) ;
            if(res.ok) {
                const data =  await res.json()  ;
                currentUser = data.user ; 
            }

        }catch(e) {
            console.log(e) ; 
        }

    }


      
     async function loadComments () {
        try {
            const res = await fetch(`/comments/${postId}`) ;
            const {comments} = await res.json() ; 
             commentsList.innerHTML = ''; 
             
            comments.forEach((comment) => {
                const li = document.createElement('li') ;
                li.innerHTML = `
                <p> ${comment.content}</p>
                <small>by ${comment.user.name} on ${new Date (comment.createdAt).toDateString()}</small>
                 ${currentUser && currentUser.id === comment.user.id ? `
                 <button class = "delete-btn" data-id = "${comment.id}" >Delete</button>` : ""}
                
                 `; 
             commentsList.appendChild(li) ;

                         // event listeners
            document.querySelectorAll('.delete-btn').forEach(button => {
                button.addEventListener("click" , () => deleteComment(button.dataset.id)) ;
            }); 
                
            })  ;



        } catch(e) {
            console.log('Error loading comments:', e);

        }
         
    }

    // Add comment
    commentForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const content = commentForm.querySelector('textarea[name="content"]').value;

        if (!token) {
            alert('Please log in to comment.');
            return;
        }

        try {
            await fetch(`/comments${postId}/comments`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify({ content })
            });

            commentForm.reset();
            loadComments();
        } catch (error) {
            console.error('Error adding comment:', error);
        }
    });

    // Delete comment
    async function deleteComment(commentId) {
        if (!token) {
            alert('Please log in to delete comments.');
            return;
        }

        try {
            await fetch(`/comments${postId}/${commentId}`, {
                method: 'DELETE',
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            });

            loadComments();
        } catch (error) {
            console.error('Error deleting comment:', error);
        }
    }

    await fetchLoggedUser(); 
    loadComments();  

});
</script>