<%-include('partials/header.ejs') %>

<div class="outer">
   <div class="descriptionCard1">  
    <h3> Me an escapist? </h3> 

<p>
    I try to keep myself busy ...yup I am an escapist mostly,  trying to escape how I feel  about certain things, about things that make me emotionally weak , I feel like I don't have much time to pay heed to this you know , so I try to escape that by making myself busy , I think this is the reason that I quote prone to procrastination , its like when I have so much work to do , so much stress , and it causes discomfort I try to escape that by wasting time even though I am not happy doing that , even though it make me feel even worse after, but for that period I have escaped , anyways I don't really do that much as I analyse a lot sometimes , I analyse my behaviour and my actions , always trying to dig out some pattern or some reason that compels few of my actions, you see , I am an overthinker ...

</p>
<p>
    Keeping myself busy was the sole reason that I joined some music training , so that at least for an hour in the day , I have some time with myself , I have sometime where I can forget about other things , the other reason was to open up , because I am not good socially , and being an introvert nerd in school with 1 year at home for JEE , had made me a social anxiety ridden lad , I wanted to change that , and thanks to it , for an hour although in alternative days , I get a context switch from the stress , and I love that time , and I always try to never skip it . 
</p>
<p>I am sure I am not the only person wanting to pursue so many things  , having sooo many hobbies and all so different from each other , I hope with time I get to do all of them , atleast I would be satisfied with myself .</p>
<p> That's it , the trail of my thoughts ended , by the way , this was an escape too. ðŸ¤§</p>
   </div>
</div>
<section id="comments">
    <h2>Comments</h2>
    <ul id="comments-list">
        
    </ul>

    <div id="commentDiv">
        <form id="comment-form" method="POST">
            <textarea name="content" placeholder="Add a comment"></textarea>
            <button type="submit">Submit</button>
        </form>
    </div>
</section>


<%- include("partials/footer.ejs") %>


<script>
  
  document.addEventListener('DOMContentLoaded', async () => {
    console.log("comment doc loaded ");
    const commentsList = document.getElementById('comments-list');
    const commentForm = document.getElementById('comment-form');
    const postId = '<%= post.numerical_id %>';  // Post ID
    const token = localStorage.getItem('token');
    let currentUser = null ;
 
    async function fetchLoggedUser(){
        if(!token) {
            return ;
        } 

        try {
            const res = await fetch('/auth/user' , {
                headers : {
                    "Authorization" : `Bearer ${token}`, 
                }
            }) ;
            if(res.ok) {
                const data =  await res.json()  ;
                currentUser = data.user ; 
            }

        }catch(e) {
            console.log(e) ; 
        }

    }


      
     async function loadComments () {
        try {
            const res = await fetch(`/comments/${postId}`) ;
            const {comments} = await res.json() ; 
             commentsList.innerHTML = ''; 
             
            comments.forEach((comment) => {
                const li = document.createElement('li') ;
                li.innerHTML = `
                <p> ${comment.content}</p>
                <small>by ${comment.user.name} on ${new Date (comment.createdAt).toDateString()}</small>
                 ${currentUser && currentUser.id === comment.user.id ? `
                 <button class = "delete-btn" data-id = "${comment.id}" >Delete</button>` : ""}
                
                 `; 
             commentsList.appendChild(li) ;

                         // event listeners
            document.querySelectorAll('.delete-btn').forEach(button => {
                button.addEventListener("click" , () => deleteComment(button.dataset.id)) ;
            }); 
                
            })  ;



        } catch(e) {
            console.log('Error loading comments:', e);

        }
         
    }

    // Add comment
    commentForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const content = commentForm.querySelector('textarea[name="content"]').value;

        if (!token) {
            alert('Please log in to comment.');
            return;
        }

        try {
            await fetch(`/comments${postId}/comments`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify({ content })
            });

            commentForm.reset();
            loadComments();
        } catch (error) {
            console.error('Error adding comment:', error);
        }
    });

    // Delete comment
    async function deleteComment(commentId) {
        if (!token) {
            alert('Please log in to delete comments.');
            return;
        }

        try {
            await fetch(`/comments${postId}/${commentId}`, {
                method: 'DELETE',
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            });

            loadComments();
        } catch (error) {
            console.error('Error deleting comment:', error);
        }
    }

    await fetchLoggedUser(); 
    loadComments();  

});
</script>